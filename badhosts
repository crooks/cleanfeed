#!/usr/bin/python
#
# vim: tabstop=4 expandtab shiftwidth=4 autoindent
#
# badhosts.py -- Auto-management of the cleanfeed bad_hosts file
#
# Copyright (C) 2005 Steve Crook <steve@mixmin.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.

import re
import sys

# If the command line doesn't include a filename arguement, use this as a
# default file for the PHR filter.
active = '/usr/local/news/cleanfeed/log/PHR.EMP'
# Don't consider a host to be bad unless it exceeds this threshold
threshold = 200

# Regex used to extract hosts
# TODO There is a risk that a clever abuser could include this in the
#      message payload in order to seed innocent hosts.
host_re = re.compile('^NNTP-Posting-Host: (.*)')
hosts = {}

# Check if we're being passed an arguement on the command line
if len(sys.argv) > 1:
    option = sys.argv[1]
else:
    option = active

# Try and open the file from which we will read the cleanfeed rejects
try:
    file = open(option, 'r')
except IOError:
    sys.stdout.write("File %s not found\n" % (option,))
    sys.exit(1)

# Populate a dictionary keyed by hostname
for line in file:
    test = host_re.match(line)
    if test:
        foo = test.group(1)
        if hosts.has_key(foo):
           hosts[foo] += 1
        else:
            hosts[foo] = 1
file.close()

for key in hosts:
    if hosts[key] >= threshold:
        print "%s\t%s" % (hosts[key], key)
